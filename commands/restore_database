#!/bin/bash

restore() {
  local COMMAND=docker
  if [ ! -f "/usr/bin/docker" ]; then
    if [ -f "/usr/bin/podman" ]; then
      COMMAND=podman
    else
      echo "One of either docker or podman should be installed."
      exit 1
    fi
  fi

  local DB_DUMP=$2
  if [ -z "$DB_DUMP" ]; then DB_DUMP=db.dump; fi

  local DB_NAME=$3
  if [ -z "$DB_NAME" ]; then DB_NAME=development; fi

  local DB_USER=$4
  if [ -z "$DB_USER" ]; then DB_USER=cardo; fi

  echo "Copying dump to container..."
  $COMMAND cp "$DB_DUMP" mercury-backend_db_1:/

  echo "Terminating all connections..."
  $COMMAND exec mercury-backend_db_1 psql -U "$DB_USER" -d postgres -c "SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = '$DB_NAME' AND pid <> pg_backend_pid();"

  echo "Dropping the old database if exists..."
  $COMMAND exec mercury-backend_db_1 dropdb --if-exists -U "$DB_USER" "$DB_NAME"

  echo "Create the new database"
  $COMMAND exec mercury-backend_db_1 createdb -U "$DB_USER" "$DB_NAME"

  echo "Restore the database from new dump..."
  $COMMAND exec mercury-backend_db_1 pg_restore --verbose --no-acl --no-privileges --no-owner -U "$DB_USER" -d "$DB_NAME" "$DB_DUMP"
}
